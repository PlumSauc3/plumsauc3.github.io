{"version":3,"sources":["webpack:///./src/pages/resume.js","webpack:///./src/components/DimTile.js","webpack:///./src/components/TileContainer.js"],"names":["Resume","_this","_Component","call","this","updateDimensions","state","style","fontSize","height","width","window","innerWidth","setState","Object","assign","headerPadding","header","componentDidMount","addEventListener","mounted","render","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","react_transition_group__WEBPACK_IMPORTED_MODULE_5__","appear","classNames","timeout","in","padding","_components_TileContainer__WEBPACK_IMPORTED_MODULE_4__","_components_DimTile__WEBPACK_IMPORTED_MODULE_3__","name","icon","color","message","to","Component","DimTile","handleShow","active","handleHide","display","flex","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","Dimmable","as","backgroundColor","props","margin","dimmed","onMouseEnter","onMouseLeave","href","textAlign","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","inverted","fitted","size","TileContainer","_React$Component","columns","Math","min","floor","tick","_this2","interval","setInterval","children","length","prevState","componentWillUnmount","clearInterval","_this3","ind","rows","push","react_transition_group__WEBPACK_IMPORTED_MODULE_3__","mountOnEnter","key","map","row","i","React"],"mappings":"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","file":"component---src-pages-resume-js-125f4a8500be082d875d.js","sourcesContent":["import React, { Component } from 'react'\nimport DimTile from '../components/DimTile'\nimport TileContainer from '../components/TileContainer'\nimport { CSSTransition } from 'react-transition-group';\n\nexport default class Resume extends Component {\n    constructor() {\n        super();\n        this.state = { headerPadding: 0, header: '' };\n    }\n    componentDidMount() {\n        this.updateDimensions();\n        window.addEventListener(\"resize\", this.updateDimensions);\n        this.setState({ mounted: true })\n    }\n\n    updateDimensions = () => {\n        const mobile = window.innerWidth < 720;\n        let state = {style: { fontSize: 22, height:'100%', width:'100%' }}\n        if (mobile) {\n            state.style['justifyContent'] = 'flex-start';\n            this.setState(Object.assign(state,{\n                headerPadding: '52px 20px 0px 20px',\n                header: 'The tiles below best characterize me as a developer. Tap on them to learn more!',\n            }));\n        } else {\n            this.setState(Object.assign(state,{\n                headerPadding: '0px 20px 0px 20px',\n                header: 'The tiles below best characterize me as a developer. Hover over them to learn more!',\n            }));\n        }\n    }\n    render() {\n        return (\n            <div className='fullscreen vertical-center-container' style={this.state.style}>\n                <CSSTransition appear classNames=\"fadeHeader\" timeout={1800} in={this.state.mounted}>\n                    <p className=\"tile-container-header\" style={{ padding: this.state.headerPadding }}>\n                        {this.state.header}\n                    </p>\n                </CSSTransition>\n                <TileContainer>\n                    <DimTile name='Resume' icon='file' color='orange' message='Click here to view a PDF version of my resume' to={'/resume.pdf'}/>\n                    <DimTile name='Github' icon='github' color='#6E5494' message='Click here to view my Github profile' to='https://github.com/PlumSauc3'/>\n                    <DimTile name='LinkedIn' icon='linkedin' color='#4875B4' message='Click here to view my LinkedIn' to='https://www.linkedin.com/in/derek-xu-06814177/'/>\n                    <DimTile name='React/Redux' icon='react' color='#05a5d1' message=\"Building beautiful interactive webapps with React and Redux is what I am most comfortable with. Check out my resume and projects to see what I've accomplished!\" />\n                    <DimTile name='SQL' icon='database' color='#D14F52' message='I am fluent in SQL and can confidently manage relational databases.' />\n                    <DimTile name='Python' icon='python' color='#ffd343' message=\"I have experience building backends with Python using Flask and Django. I am also comfortable doing data analysis and manipulation with NumPy, SciPy and Pandas.\" />\n                </TileContainer>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Icon, Dimmer } from 'semantic-ui-react';\n\nexport default class DimTile extends Component {\n  state = {}\n\n  handleShow = () => this.setState({ active: true })\n  handleHide = () => this.setState({ active: false })\n\n  render() {\n    const { active } = this.state\n\n    return (\n      <div style={{ display: 'flex', flex: 'auto' }}>\n        <Dimmer.Dimmable\n          as=\"div\"\n          className=\"vertical-center-container\"\n          style={{ backgroundColor: this.props.color, flex: 'auto', margin: 0 }}\n          dimmed={active}\n          onMouseEnter={this.handleShow}\n          onMouseLeave={this.handleHide}\n        >\n          <Dimmer active={active} as=\"a\" href={this.props.to}>\n            <p style={{ fontSize: 16, textAlign: 'left', margin: 20 }}>{this.props.message}</p>\n          </Dimmer>\n            <div className=\"vertical-center-container\" style={{ width: 200 }}>\n              <h1 className=\"tile-header\">{this.props.name}</h1>\n              <Icon inverted fitted name={this.props.icon} size='huge'/>\n            </div>\n        </Dimmer.Dimmable>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nclass TileContainer extends React.Component {\n    constructor() {\n        super();\n        this.state = { style: { width: 0, height: 0 }, columns: 1, tick: -1 };\n    }\n\n    componentDidMount() {\n        this.updateDimensions();\n        window.addEventListener(\"resize\", this.updateDimensions);\n\n        this.interval = setInterval(() => {\n            if (this.state.tick < this.props.children.length) {\n                this.setState(prevState => ({\n                    tick: prevState.tick + 1,\n                }));\n            }\n        }, 150);\n\n        this.setState({ tick: 0 })\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    updateDimensions = () => {\n        let columns;\n        if (window.innerWidth <= 480) {\n            columns = 1;\n        } else if (window.innerWidth <= 720) {\n            columns = 2;\n        } else {\n            columns = 3;\n        }\n        let width, height;\n        width = Math.min(800, window.innerWidth);\n        height = window.innerWidth <= 480 ? 200 : Math.floor(width/columns);\n        this.setState({\n            style: {width: width, height: height},\n            columns: columns,\n            tick: this.state.columns !== columns ? 0 : this.state.tick,\n        });\n    }\n    \n    render() {\n        let ind = 0;\n        let rows = [];\n        while (ind < this.props.children.length) {\n            if (ind % this.state.columns === 0) {\n                rows.push([]);\n            }\n            rows[rows.length - 1].push(\n                    <CSSTransition \n                        in={this.state.tick === ind}\n                        appear\n                        classNames=\"fade\"\n                        mountOnEnter\n                        timeout={750}\n                        key={ind}\n                        >\n                        {this.props.children[ind]}\n                    </CSSTransition>\n            );\n            ind ++;\n        }\n\n        return (\n            <div>\n                {rows.map((row, i) => (\n                    <div className='stackable' style={this.state.style} key={i} children={row}>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default TileContainer;"],"sourceRoot":""}